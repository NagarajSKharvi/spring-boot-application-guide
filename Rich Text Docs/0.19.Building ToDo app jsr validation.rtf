{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue0;\red0\green0\blue0;
\red0\green0\blue0;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c1\c1;\cssrgb\c0\c1\c1;\cssrgb\c0\c0\c0;
\cssrgb\c0\c1\c1;\cssrgb\c0\c1\c1;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh16580\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs48 \cf2 Building ToDo app hibernate validator
\fs22 \cf2 \
\

\fs28 \cf2 Add default description
\fs22 \cf2 \
\pard\pardeftab720\partightenfactor0
\cf2 @RequestMapping(value = "/add-todo", method = RequestMethod.GET)\
public String showTodoPage(ModelMap modelMap) \{\
	modelMap.addAttribute("todo", new Todo(0, (String) modelMap.get("name"), "Default Description", new Date(), false));\
	return "todo";\
\}\
\
Now we will try to restrict non empty description/value with minimum of 10 characters validating in server side. It can be done by using \
\pard\pardeftab720\partightenfactor0
\cf2 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Starting with Boot 2.3, we also need to explicitly add the \cf5 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 spring-boot-starter-validation \cf3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 dependency\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\pardeftab720\partightenfactor0
\cf3 <dependency> \
	<groupId>org.springframework.boot</groupId> \
	<artifactId>spring-boot-starter-validation</artifactId> \
</dependency>\
\

\fs28 Todo model
\fs22 \
\cf5 @Getter @Setter\
@NoArgsConstructor\
@AllArgsConstructor\
@ToString\
public class Todo \{\
    \
	private int id;\
    private String user;\
    @Size(min = 10, message = "Enter atleast 10 characters")\
    private String desc;\
    private Date targetDate;\
    private boolean isDone;\
	\
    public Todo(String user, String desc, Date targetDate, boolean isDone) \{\
		super();\
		this.user = user;\
		this.desc = desc;\
		this.targetDate = targetDate;\
		this.isDone = isDone;\
	\}\
\}\
\
When we add a todo data with desc field being less than 10 characters it won\'92t work because we added a validation on bean not on Controller. To enable validation on controller we need to add @Valid annotation.\
\pard\pardeftab720\partightenfactor0
\cf5 @RequestMapping(value = "/add-todo", method = RequestMethod.POST)\
public String addTodo(ModelMap modelMap, @Valid Todo todo) \{\
	todoService.addTodo(new Todo((String) modelMap.get("name"), todo.getDesc(), new Date(), false));\
	return "redirect:/list-todos";\
\}\
\pard\pardeftab720\partightenfactor0
\cf5 Now it works but we need to handle the error (It gives runtime error it should not happen it should throw the error)\
\
How do we know the validation is success or not ? By using BindingResult (It will have result which is success or failure)\
\cf6 @RequestMapping(value = "/add-todo", method = RequestMethod.POST)\
public String addTodo(ModelMap modelMap, @Valid Todo todo, BindingResult bindingResult) \{\
if (bindingResult.hasErrors()) \{\
		return "todo";\
	\}\
	todoService.addTodo(new Todo((String) modelMap.get("name"), todo.getDesc(), new Date(), false));\
	return "redirect:/list-todos";\
\}\
\
Now when you try it. It works and throw error at server side but the client side will not get to know. To enable this we need to use JSTL error\
\cf2 <%@taglib uri="http://www.springframework.org/tags/form" prefix="form"%>\
<html>\
	<head>\
		<title>First web application</title>\
		<link href="webjars/bootstrap/4.5.3/css/bootstrap.min.css" rel="stylesheet">\
	</head>\
	\
	<body>\
		<div class = "container">\
			Add \cf2 \ul \ulc2 Todo\cf2 \ulnone  page for $\{name\}\
			\
			<form:form method="post" modelAttribute="todo">\
				<fieldset class = "form-group">\
					<form:label path = "desc">Description</form:label>\
					<form:input path = "desc" type = "text" class = "form-control" required="required"/>\
					<form:errors path = "desc" cssClass = "text-warning"/>\
				</fieldset>\
	    		<button type = "submit" class = "btn btn-success">Add</button>\
			</form:form>\
			\
		</div>\
		\
		<script src="webjars/jquery/3.5.1/jquery.min.js"></script>\
		<script src="webjars/bootstrap/4.5.3/js/bootstrap.min.js"></script>\
	</body>\
</html>\
\
Now it works properly by showing error message at client side\
There are few more JSR Validation explore it.}