{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue0;\red0\green0\blue0;
\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c1\c1;\cssrgb\c0\c1\c1;\cssrgb\c0\c1\c1;
\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh16580\viewkind0
\deftab720
\pard\tx566\pardeftab720\partightenfactor0

\f0\fs48 \cf2 \expnd0\expndtw0\kerning0
ResponseBody and View Resolver
\fs22 \
\
If you want to write some business login then java is the right place but if you want to do some webpage stuff to show information on browser then you can use a JSP pages or templates like ftl.\
We can create JSP\'92s in Spring boot application in the folder /src/main/webapp/WEB-INF/jsp/login.jsp\
\
Create a source folder called src/main/webapp, WEB-INF folder inside and jsp folder inside\
login.jsp\
\pard\pardeftab720\partightenfactor0
\cf2 \kerning1\expnd0\expndtw0 <html>\
	<head>\
		<title>First web application</title>\
	</head>\
	\
	<body>\
		My first JSP !!!\
	</body>\
</html>\cf2 \expnd0\expndtw0\kerning0
\
\pard\tx566\pardeftab720\partightenfactor0
\cf2 \
LoginController\
\pard\pardeftab720\partightenfactor0
\cf2 \kerning1\expnd0\expndtw0 @Controller\
public class LoginController \{\
\
	@RequestMapping("/login")\
	@ResponseBody\
	public String loginMessage() \{\
		return "login";\
	\}\
\}\
\
To make your application to look for a view you need to remove ResponseBody annotation.\cf2 \expnd0\expndtw0\kerning0
 \
\pard\pardeftab720\partightenfactor0
\cf3 \kerning1\expnd0\expndtw0 @Controller\
public class LoginController \{\
\
	@RequestMapping("/login")\
	public String loginMessage() \{\
		return "login";\
	\}\
\}\cf2 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\partightenfactor0
\cf2 \
Then DispatcherServlet looks for a view and again gives white label error page this is because DispatcherServlet doesn\'92t know the path of the JSP page. Then how do tell \cf3 DispatcherServlet where the login.jsp page is located ? That\'92s where concept of View Resolver comes into the picture. Whenever we provide a view name to DispatcherServlet it uses something called as view resolver to resolve it. So we can make this mapping \
login -> /src/main/webapp/WEB-INF/jsp/login.jsp\
\pard\tx566\pardeftab720\partightenfactor0
\cf3 \

\fs28 \cf3 View Resolver
\fs22 \cf3 \
\cf2 This can be specified in the application.properties file as\
\pard\pardeftab720\partightenfactor0
\cf3 \kerning1\expnd0\expndtw0 spring.mvc.view.prefix=/WEB-INF/jsp/\
spring.mvc.view.suffix=.jsp\cf2 \expnd0\expndtw0\kerning0
\
\
\pard\pardeftab720\partightenfactor0
\cf3 But again it gives white label error page this is because our embedded tomcat server doesn\'92t have support for JSP pages. To enable the support we need to add dependency called tomcat-embed-jasper\cf2 \
\pard\pardeftab720\partightenfactor0
\cf3 \kerning1\expnd0\expndtw0 <dependency>\
	<groupId>org.apache.tomcat.embed</groupId>\
	<artifactId>tomcat-embed-jasper</artifactId>\
</dependency>\
\
Whenever we add a new dependency we need to stop and start the entire server.\
\pard\tx566\pardeftab720\partightenfactor0
\cf4 \expnd0\expndtw0\kerning0
Access http://localhost:8080/login on browser it gives jsp page as response\
\cf5 \outl0\strokewidth0 \strokec5 My first JSP !!! \cf2 \outl0\strokewidth0 \
\
\
}